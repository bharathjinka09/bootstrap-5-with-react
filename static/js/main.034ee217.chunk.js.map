{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","htmlFor","type","id","placeholder","rows","width","height","viewBox","fill","xmlns","fillRule","d","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gQAkKeA,MAjKf,WACE,OACE,oCACE,yBAAKC,UAAU,kBACb,wBAAIA,UAAU,eAAd,YACA,6BACE,yBAAKA,UAAU,QACb,2BAAOC,QAAQ,QAAQD,UAAU,cAAjC,iBAGA,2BACEE,KAAK,QACLF,UAAU,eACVG,GAAG,QACHC,YAAY,sBAGhB,yBAAKJ,UAAU,QACb,2BAAOC,QAAQ,WAAWD,UAAU,cAApC,YAGA,2BACEE,KAAK,WACLF,UAAU,eACVG,GAAG,WACHC,YAAY,cAGhB,yBAAKJ,UAAU,QACb,2BAAOC,QAAQ,MAAMD,UAAU,cAA/B,qBAGA,8BAAUA,UAAU,eAAeG,GAAG,MAAME,KAAK,OAEnD,yBAAKL,UAAU,UACb,4BAAQA,UAAU,kBAAkBE,KAAK,UAAzC,eAMN,6BACE,wBAAIF,UAAU,eAAd,gBACA,yBAAKA,UAAU,QACb,2BAAOC,QAAQ,QAAQD,UAAU,cAAjC,iBAGA,2BACEE,KAAK,QACLF,UAAU,eACVG,GAAG,QACHC,YAAY,sBAGhB,yBAAKJ,UAAU,QACb,2BAAOC,QAAQ,WAAWD,UAAU,cAApC,YAGA,2BACEE,KAAK,WACLF,UAAU,eACVG,GAAG,WACHC,YAAY,cAGhB,yBAAKJ,UAAU,QACb,2BAAOC,QAAQ,YAAYD,UAAU,cAArC,oBAGA,2BACEE,KAAK,WACLF,UAAU,eACVG,GAAG,WACHC,YAAY,uBAIlB,yBAAKJ,UAAU,kBACb,wBAAIA,UAAU,eAAd,YACA,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,QACb,yBACEM,MAAM,MACNC,OAAO,MACPC,QAAQ,YACRR,UAAU,iBACVS,KAAK,eACLC,MAAM,8BAEN,0BACEC,SAAS,UACTC,EAAE,0SAIR,2BACEV,KAAK,QACLF,UAAU,eACVG,GAAG,QACHC,YAAY,sBAGhB,6BACE,6BACE,yBAAKJ,UAAU,qBACb,yBAAKA,UAAU,QACb,yBACEM,MAAM,MACNC,OAAO,MACPC,QAAQ,YACRR,UAAU,gBACVS,KAAK,eACLC,MAAM,8BAEN,0BACEC,SAAS,UACTC,EAAE,kWAIR,2BACEV,KAAK,OACLF,UAAU,eACVG,GAAG,gCACHC,YAAY,gBAKpB,yBAAKJ,UAAU,oBACb,yBAAKA,UAAU,QACb,yBACEM,MAAM,MACNC,OAAO,MACPC,QAAQ,YACRR,UAAU,aACVS,KAAK,eACLC,MAAM,8BAEN,0BACEC,SAAS,UACTC,EAAE,8MAIR,2BACEV,KAAK,WACLF,UAAU,eACVG,GAAG,WACHC,YAAY,cAGhB,yBAAKJ,UAAU,UACb,4BAAQA,UAAU,uBAAuBE,KAAK,UAA9C,gBC9IUW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,KCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.034ee217.chunk.js","sourcesContent":["import React from \"react\";\nfunction App() {\n  return (\n    <>\n      <div className=\"container mt-3\">\n        <h2 className=\"text-center\">Register</h2>\n        <div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"email\" className=\"form-label\">\n              Email address\n            </label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"email\"\n              placeholder=\"name@example.com\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"password\" className=\"form-label\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              placeholder=\"Password\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"bio\" className=\"form-label\">\n              Tell us about you\n            </label>\n            <textarea className=\"form-control\" id=\"bio\" rows=\"3\"></textarea>\n          </div>\n          <div className=\"col-12\">\n            <button className=\"btn btn-primary\" type=\"submit\">\n              Register\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        <h2 className=\"text-center\"> Utilities! </h2>\n        <div className=\"mb-3\">\n          <label htmlFor=\"email\" className=\"form-label\">\n            Email address\n          </label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"email\"\n            placeholder=\"name@example.com\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"password\" className=\"form-label\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password\"\n            placeholder=\"Password\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"cpassword\" className=\"form-label\">\n            Confirm Password\n          </label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password\"\n            placeholder=\"Confirm Password\"\n          />\n        </div>\n      </div>\n      <div className=\"container mt-3\">\n        <h2 className=\"text-center\"> Icons! </h2>\n        <div className=\"mb-2 input-group\">\n          <div className=\"icon\">\n            <svg\n              width=\"1em\"\n              height=\"1em\"\n              viewBox=\"0 0 16 16\"\n              className=\"bi bi-envelope\"\n              fill=\"currentColor\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1H2zm13 2.383l-4.758 2.855L15 11.114v-5.73zm-.034 6.878L9.271 8.82 8 9.583 6.728 8.82l-5.694 3.44A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.739zM1 11.114l4.758-2.876L1 5.383v5.73z\"\n              />\n            </svg>\n          </div>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"email\"\n            placeholder=\"name@example.com\"\n          />\n        </div>\n        <div>\n          <div>\n            <div className=\"input-group mb-2 \">\n              <div className=\"icon\">\n                <svg\n                  width=\"1em\"\n                  height=\"1em\"\n                  viewBox=\"0 0 16 16\"\n                  className=\"bi bi-person \"\n                  fill=\"currentColor\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M13 14s1 0 1-1-1-4-6-4-6 3-6 4 1 1 1 1h10zm-9.995-.944v-.002.002zM3.022 13h9.956a.274.274 0 0 0 .014-.002l.008-.002c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664a1.05 1.05 0 0 0 .022.004zm9.974.056v-.002.002zM8 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm3-2a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"\n                  />\n                </svg>\n              </div>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"inlineFormInputGroupUsername2\"\n                placeholder=\"Username\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"mb-2 input-group\">\n          <div className=\"icon\">\n            <svg\n              width=\"1em\"\n              height=\"1em\"\n              viewBox=\"0 0 16 16\"\n              className=\"bi bi-lock\"\n              fill=\"currentColor\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M11.5 8h-7a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h7a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1zm-7-1a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-7zm0-3a3.5 3.5 0 1 1 7 0v3h-1V4a2.5 2.5 0 0 0-5 0v3h-1V4z\"\n              />\n            </svg>\n          </div>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password\"\n            placeholder=\"Password\"\n          />\n        </div>\n        <div className=\"col-12\">\n          <button className=\"btn btn-primary mb-2\" type=\"submit\">\n            Register\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"../src/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}